const fs = require('fs');
const mime = require('mime-types');
const bitcoinjs = require('bitcoinjs-lib');
const Inscription = require("../inscription");

const transactionRaw = '0100000000010176e1ab658d32cd487354db7820e46b8c7fe02ce950d729b67379d2868674d92f0000000000fdffffff011027000000000000225120cb5717886378ed21b1aee90031942bcb6b5cc608861457cf78cf2d1303afd5c903407fcacdb1af974c251e7af7c0ccf12bf9f1e64aa8965ea65c81b96103e4142bae1545caa1c48a2948c8d6a599b2600fba2e8c8318e40ab283c702a730e841fe58fdbd0720db0aa50361928d8cafb6da5d3119e251860a91d7d5e8b0159e0a8e6438e8aa67ac0063036f7264010109696d6167652f706e67004d080289504e470d0a1a0a0000000d494844520000001000000010080600000168f4cff70000000467414d410000b18f0bfc6105000000206348524d00007a26000080840000fa00000080e8000075300000ea6000003a98000017709cba513c00000084655849664d4d002a000000080005011200030000000100010000011a0005000000010000004a011b0005000000010000005201280003000000010002000087690004000000010000005a00000000000000480000000100000048000000010003a00100030000000100010000a00200040000000100000010a0030004000000010000001000000000c76f1cf1000000097048597300000b1300000b1301009a9c18000002ca69545874584d4c3a636f6d2e61646f62652e786d7000000000003c783a786d706d65746120786d6c6e733a783d2261646f62653a6e733a6d6574612f2220783a786d70746b3d22584d5020436f726520362e302e30223e0a2020203c7264663a52444620786d6c6e733a7264663d22687474703a2f2f7777772e77332e6f72672f313939392f30322f32322d7264662d73796e7461782d6e7323223e0a2020202020203c7264663a4465736372697074696f6e207264663a61626f75743d22220a202020202020202020202020786d6c6e733a746966663d22687474703a2f2f6e732e61646f62652e636f6d2f746966662f312e302f220a202020202020202020204d08022020786d6c6e733a657869663d22687474703a2f2f6e732e61646f62652e636f6d2f657869662f312e302f223e0a2020202020202020203c746966663a595265736f6c7574696f6e3e37323c2f746966663a595265736f6c7574696f6e3e0a2020202020202020203c746966663a5265736f6c7574696f6e556e69743e323c2f746966663a5265736f6c7574696f6e556e69743e0a2020202020202020203c746966663a585265736f6c7574696f6e3e37323c2f746966663a585265736f6c7574696f6e3e0a2020202020202020203c746966663a4f7269656e746174696f6e3e313c2f746966663a4f7269656e746174696f6e3e0a2020202020202020203c657869663a506978656c5844696d656e73696f6e3e3231303c2f657869663a506978656c5844696d656e73696f6e3e0a2020202020202020203c657869663a436f6c6f7253706163653e313c2f657869663a436f6c6f7253706163653e0a2020202020202020203c657869663a506978656c5944696d656e73696f6e3e3231303c2f657869663a506978656c5944696d656e73696f6e3e0a2020202020203c2f7264663a4465736372697074696f6e3e0a2020203c2f7264663a5244463e0a3c2f783a786d706d6574613e0a173c9f3e0000038b4944415438113d525d889455187ecef97e666667d6f64f458b6891c5b5ba09dc22a4dab448eb22285351297657776627128c2e424d0802ba9808826ad98c30666441b48bc00b4b84dc60734b584864337155da1c776727f76fdaf9fb66beff734ee79b8dced5e13de77ddee7e705e419f87dd9a2fd330facd8542c8c6465be27a8e297bb8e306a4c2059cff6cc942c816143f47e61f2c66be7b0cd853c38f0b74582ca91ec8369231799dc76b5750887efe7fda2ecb51c21760e33419d5c84b646292804e67325a8ba68270b0586b3970cb8869f696024cbb357d8aaf6fcc2928e81b6284d4f71bf498f6917f61182f8e2fcf4db534bfeb59c2dc66f39c29204d05f1577eebbe2898f6c41cd85c8e4cdd910e7a68a5d4fea88242af8f60d82265d40ab4a8a29216840f5956f84e8fddc174894c48e13bee81a2ca483faff1f0697f299a37717ad4393ff4cefbf5c59f343be3748becfeae2d61f25afaf699d3a91055f5955e09adaaf9787f45de4586d5168792286bb37924fc7eb584f343cd7a520fe9dc388c0b3d42c69f86ceb0642d2259c78290a660b9cbfeaa085f9f04cff0cb55718a4301c8e8631f2bd83c46b210cbcac63b5e451bbee6da121b50d159942cda088691ce49d221edea86272d6f5cdba3887bd3f95d3bda375ebd0292b484814cb52ea9e05fe78dc95b8ffa97875d44e7327141f9ba9627b448359f771e7eb75447a404960548a9046d2c9722e0d118e6b3c8a5ad1c35f2bae1c4fd1a54611a21138550f9ee1652e1e8c2602f45400105c92c66c3a12db105fbe57b44d6301f2060def0f3791039dcd680d2bb8b7ece3dd31079625bd7388880862c79af5886538999f8f871364a898cbe85acbe0ec9ce19dea5caf3d12d571e1b68937af7938dea2e3831742d8dc4eb1b8ca919140e766183a43f03c35a631a7769a1ccde52dc750c36e5511679f6927bf653d8c5cf7f1c3c128fecc33749f76b0bb59e0cb7d21743fa6426e13f67c5215050724a60a9b7a869ae5ae0cc850b922d7cf772822a61228c3f80d0f279f2218794bc7b6f7cab83851474827a8563c5eb3281c9365a957d1fa88d4b752a5f878cc1637e704da958635d8f410b05cf4b1b94381b8d481ad8faad8fb6141dc90e636fb0c864dfad67eca69af9f37aee84aec4567d1650b06e3dce3f4d8764ab9cfd1ffa3e45d61fce936505b6957aa466162eecca69d01cb064010472ab516e5ee936e8fe3b323dc653b5426b6308fcb492ceb7a98e49c8fdefeaae37ad018ec0064cfbf222eeb2c500c4c850000000049454e44ae4260826821c0db0aa50361928d8cafb6da5d3119e251860a91d7d5e8b0159e0a8e6438e8aa6700000000'

const tx = bitcoinjs.Transaction.fromHex(Buffer.from(transactionRaw, 'hex'));

const txid = tx.ins[0].hash.toString('hex')

const witness = tx.ins[0].witness[1].toString('hex')
let inscript = new Inscription(txid, witness);
const isOrd = inscript.isOrdinalGenesis()
const type = inscript.getContentType()
const data = inscript.getContentData()
fs.writeFileSync(__dirname + '/tmp/' + txid.substring(0, 6) + "." + mime.extension(type), data, { flag: 'w' });
